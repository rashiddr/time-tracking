<div class="row">
    <div class="col-md-12">
      <h2>Edit <%= resource_name.to_s.humanize %></h2>
    </div>
    <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: {'data-toggle': 'validator', role: 'form', method: :put}) do |f| %>
          <%= devise_error_messages! %>
          <div class="col-md-11">
            <div class="row">
              <div class="col-md-6 profile-edit">
                <div class="form-group has-feedback">
                    <%= f.label :First_name,class: "control-label" %><br />
                    <%= f.text_field :first_name, autofocus: true,class:'form-control',data: { error: "First name required"} %>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <div class="help-block with-errors"></div>
                </div>
              </div>
              <div class="field col-md-6 profile-edit">
                <div class="form-group has-feedback">
                    <%= f.label :Last_name,class: "control-label" %><br />
                    <%= f.text_field :last_name, autofocus: true,class:'form-control',data: { error: "Last name required"} %>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <div class="help-block with-errors"></div>
                </div>
              </div>
              <div class="field col-md-6 profile-edit">
                <div class="form-group has-feedback">
                    <%= f.label :Location,class: "control-label" %><br />
                    <%= f.text_field :place, autofocus: true,class:'form-control',data: { error: "Location name required"} %>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <div class="help-block with-errors"></div>
                </div>
              </div>
              <div class="field col-md-6 profile-edit">
                <div class="form-group has-feedback">
                    <%= f.label :Date_of_Birth,class: "control-label" %><br />
                    <%= f.date_field :dob, autofocus: true,class:'form-control'%>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <div class="help-block with-errors"></div>
                </div>
              </div>
              <div class="field col-md-6 profile-edit">
                <div class="form-group has-feedback">
                  <div class="row">
                      <div class="col-md-12">
                        <%= f.label :Profile_Photo,class:"control-label" %><br/>
                      </div>
                      <div class="col-md-6">
                        <%= f.file_field :user_pic, autofocus: true,class:'form-control',id:'files' %>
                      </div>
                      <div class="col-md-6" id="list">
                        <%= image_tag @user.user_pic.url(:thumb),class:'img-responsive img-thumbnail',id:'image_prv' %>
                      </div>  
                      <div id="progress_bar"><div class="percent">0%</div></div>
                      <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                      <div class="help-block with-errors"></div> 
                  </div>
                </div>
              </div>
              <div class="field col-md-6 profile-edit">
                <div class="form-group has-feedback">
                  <%= f.label :Username,class: "control-label" %><br />
                  <%= f.text_field :username, autofocus: true,class:'form-control' %>
                  <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                  <div class="help-block with-errors"></div>
                </div>
              </div>
              <div class="field col-md-6 profile-edit">
                <div class="form-group has-feedback">
                    <%= f.label :email,class: "control-label" %><br />
                    <%= f.email_field :email, autofocus: true,class:'form-control'%>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <div class="help-block with-errors"></div>
                </div>
              </div>
              <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
                  <div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
              <% end %>
              <div class="field col-md-6 profile-edit">
                <div class="form-group has-feedback">
                    <%= f.label :password,class: "control-label" %> <i>(leave blank if you don't want to change it)</i><br />
                    <%= f.password_field :password, autocomplete: "off",class:'form-control',id: "inputPassword", pattern: "(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}", data: { error: "Minimum 6  letters long and must contain at least one number, one uppercase, and lowercase letter"}  %>
                    <% if @minimum_password_length %>
                      <em><%= @minimum_password_length %> characters minimum</em>
                    <% end %>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <div class="help-block with-errors"></div>
                </div>
              </div>
              <div class="field col-md-6 profile-edit">
                <div class="form-group has-feedback">
                    <%= f.label :password_confirmation, class: "control-label" %><br />
                    <%= f.password_field :password_confirmation, autocomplete: "off",class:'form-control'%>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <div class="help-block with-errors"></div>
                </div>
              </div>
              <div class="field col-md-12 profile-edit">
                <div class="row">
                  <div class="col-md-6">
                      <%= f.label :current_password %> <i>(we need your current password to confirm your changes)</i><br />
                      <%= f.password_field :current_password, autocomplete: "off",class:'form-control' %>
                  </div>
                </div>
              </div>

              <div class="actions field col-md-12">
                <%= f.submit "Update", class:'btn btn-primary btn-sm'%>
              </div>
            </div>
          </div>
    <% end %>    
</div>

<script>
    $( function() {
      $( "#user_dob" ).datepicker({
              changeMonth:true,
              changeYear:true,
              dateFormat:"yy-mm-dd",
              yearRange: '1960:2005',
              maxDate:('-15Y')
      });
    } );
  </script>
  <script>//script for loading image on selecting
  function handleFileSelect(evt) {
    var files = evt.target.files; // FileList object

    // Loop through the FileList and render image files as thumbnails.
    for (var i = 0, f; f = files[i]; i++) {

      // Only process image files.
      if (!f.type.match('image.*')){
        $("#files").val('');
        alert('Please select an image file');
        var elem = document.getElementById('image_prv');
        elem.parentNode.removeChild(elem); 
        continue;
      }

      var reader = new FileReader();

      // Closure to capture the file information.
      reader.onload = (function(theFile) {
        return function(e) {
          // Render thumbnail.
          var span = document.getElementById('list');
          span.innerHTML = ['<img class="img-thumbnail thumb_pic" id="image_prv" src="', e.target.result,
                            '" title="', escape(theFile.name), '"/>'].join('');



        };
      })(f);

      // Read in the image file as a data URL.
      reader.readAsDataURL(f);
    }
  }

  document.getElementById('files').addEventListener('change', handleFileSelect, false);
</script>
<script>//script for progress bar
  var reader;
  var progress = document.querySelector('.percent');

  function abortRead() {
    reader.abort();
  }

  function errorHandler(evt) {
    switch(evt.target.error.code) {
      case evt.target.error.NOT_FOUND_ERR:
        alert('File Not Found!');
        break;
      case evt.target.error.NOT_READABLE_ERR:
        alert('File is not readable');
        break;
      case evt.target.error.ABORT_ERR:
        break; // noop
      default:
        alert('An error occurred reading this file.');
    };
  }

  function updateProgress(evt) {
    // evt is an ProgressEvent.
    if (evt.lengthComputable) {
      var percentLoaded = Math.round((evt.loaded / evt.total) * 100);
      // Increase the progress bar length.
      if (percentLoaded < 100) {
        progress.style.width = percentLoaded + '%';
        progress.textContent = percentLoaded + '%';
      }
    }
  }

  function handleFileSelect(evt) {
    // Reset progress indicator on new file selection.
    progress.style.width = '0%';
    progress.textContent = '0%';

    reader = new FileReader();
    reader.onerror = errorHandler;
    reader.onprogress = updateProgress;
    reader.onabort = function(e) {
      alert('File read cancelled');
    };
    reader.onloadstart = function(e) {
      document.getElementById('progress_bar').className = 'loading';
    };
    reader.onload = function(e) {
      // Ensure that the progress bar displays 100% at the end.
      progress.style.width = '100%';
      progress.textContent = '100%';
      setTimeout("document.getElementById('progress_bar').className='';", 2000);
    }

    // Read in the image file as a binary string.
    reader.readAsBinaryString(evt.target.files[0]);
  }

  document.getElementById('files').addEventListener('change', handleFileSelect, false);
</script>
